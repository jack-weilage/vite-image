{
    "$schema": "https://json.schemastore.org/eslintrc.json",
    "ignorePatterns": [ "dist/*" ],
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:@typescript-eslint/strict"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": "./tsconfig.json"
    },
    "plugins": [ "@typescript-eslint" ],
    "root": true,
    "env": {
        "node": true,
        "es2022": true
    },

    "rules": {
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/dot-notation": "off",
        
        "@typescript-eslint/ban-ts-comment": "error",
        "@typescript-eslint/consistent-type-exports": "warn",
        "@typescript-eslint/consistent-type-imports": "warn",
        "@typescript-eslint/explicit-function-return-type": [
            "warn",
            {
                "allowedNames": [ "transform", "matcher" ]
            }
        ],
        "@typescript-eslint/naming-convention": [
            "warn",
            {
                "selector": [ "variable", "function" ],
                "format": [ "snake_case" ]
            },
            {
                "selector": "variable",
                "types": [ "boolean" ],
                "prefix": [ "is_", "was_", "will_", "has_", "can_", "should_", "would_", "might_", "did_" ],
                "format": [ "snake_case" ]
            },
            {
                "selector": "variable",
                "modifiers": [ "const", "global" ],
                "format": [ "UPPER_CASE", "snake_case" ]
            },
            {
                "selector": [ "variable", "function" ],
                "modifiers": [ "destructured" ],
                "format": null
            },
            {
                "selector": [ "interface", "typeAlias" ],
                "format": [ "PascalCase" ]
            },
            {
                "selector": "enum",
                "format": [ "PascalCase" ],
                "suffix": [ "Enum" ]
            }
        ],
        "@typescript-eslint/no-redundant-type-constituents": "error",
        "@typescript-eslint/no-unnecessary-qualifier": "warn",
        "@typescript-eslint/no-useless-empty-export": "error",
        "@typescript-eslint/prefer-regexp-exec": "error",
        "@typescript-eslint/require-array-sort-compare": "warn",

        "array-bracket-newline": [ "warn", "consistent" ],
        "array-bracket-spacing": [ "warn", "always", { "objectsInArrays": false } ],
        "array-callback-return": "error",
        "arrow-body-style": "warn",
        "arrow-spacing": "warn",
        "block-spacing": "warn",
        "comma-dangle": "warn",
        "comma-spacing": "warn",
        "comma-style": "warn",
        "curly": [ "warn", "multi" ],
        "default-case-last": "error",
        "default-param-last": "error",
        "dot-location": [ "error", "property" ],
        "eol-last": [ "warn", "never" ],
        "eqeqeq": "error",
        "key-spacing": [ "warn", { "mode": "minimum" } ],
        "linebreak-style": "error",
        "logical-assignment-operators": "warn",
        "new-cap": "error",
        "newline-per-chained-call": "error",
        "no-confusing-arrow": "error",
        "no-else-return": "warn",
        "no-floating-decimal": "warn",
        "no-inline-comments": "warn",
        "no-invalid-regexp": "error",
        "no-invalid-this": "error",
        "no-lonely-if": "error",
        "no-mixed-operators": "error",
        "no-multi-assign": "error",
        "no-nested-ternary": "error",
        "no-return-assign": "error",
        "no-return-await": "error",
        "no-self-assign": "error",
        "no-self-compare": "error",
        "no-template-curly-in-string": "error",
        "no-trailing-spaces": "warn",
        "no-unneeded-ternary": "error",
        "no-unreachable-loop": "error",
        "no-unused-expressions": "error",
        "no-useless-computed-key": "warn",
        "no-useless-concat": "warn",
        "no-useless-rename": "warn",
        "no-useless-return": "warn",
        "no-var": "error",
        "object-curly-spacing": [ "warn", "always" ],
        "object-shorthand": "warn",
        "one-var-declaration-per-line": "warn",
        "operator-assignment": "warn",
        "prefer-arrow-callback": "error",
        "prefer-const": "warn",
        "prefer-object-spread": "warn",
        "prefer-rest-params": "warn",
        "prefer-template": "warn",
        "quotes": [ "warn", "single" ],
        "require-await": "error",
        "semi-spacing": "error",
        "semi": [ "warn", "never" ],
        "space-before-function-paren": [ "error", {
            "anonymous": "always",
            "named": "never",
            "asyncArrow": "always"
        } ],
        "space-infix-ops": "warn",
        "space-unary-ops": "warn",
        "strict": "error",
        "yoda": "error"
        // "brace-style": [ "error", "allman" ],
        // "capitalized-comments": "warn",
        // "no-use-before-define": "error",
        // "sort-imports": "warn",
    }
}